#!/usr/bin/env node

const path = require('path');
const { convertMarkdownToPDF } = require('../md2pdf-html.js');

async function main() {
  const args = process.argv.slice(2);
  
  if (args.length === 0 || args.includes('--help') || args.includes('-h')) {
    console.log(`
üìÑ md2pdf - Markdown zu PDF Konvertierer mit Emoji-Unterst√ºtzung

Verwendung:
  md2pdf <input.md> [output.pdf]        # Einzelne Datei
  md2pdf *.md                           # Alle MD-Dateien im Verzeichnis
  md2pdf file.md --no-open              # Ohne automatisches √ñffnen
  
Optionen:
  --no-open     PDF nicht automatisch √∂ffnen
  --help, -h    Diese Hilfe anzeigen
  
Beispiele:
  md2pdf README.md
  md2pdf README.md output.pdf
  md2pdf *.md
  md2pdf document.md --no-open
  
Features:
  ‚úÖ Perfekte Emoji-Darstellung (üéØüìãüí∞üì¢üíªüé®)
  ‚úÖ Helvetica Font
  ‚úÖ Modernes Styling
  ‚úÖ Automatisches √ñffnen
  ‚úÖ Inhaltsverzeichnis aus √úberschriften
    `);
    return;
  }
  
  const inputFile = args[0];
  const outputFile = args.find(arg => arg.endsWith('.pdf') && !arg.includes('*'));
  const noOpen = args.includes('--no-open');
  
  try {
    if (inputFile.includes('*')) {
      const glob = require('glob');
      const files = glob.sync(inputFile);
      
      if (files.length === 0) {
        console.log('‚ùå Keine Markdown-Dateien gefunden.');
        return;
      }
      
      console.log(`üìö Konvertiere ${files.length} Dateien...`);
      
      for (const file of files) {
        try {
          await convertMarkdownToPDF(file, null, { openAfter: !noOpen });
        } catch (error) {
          console.error(`‚ùå Fehler bei ${file}:`, error.message);
        }
      }
    } else {
      await convertMarkdownToPDF(inputFile, outputFile, { openAfter: !noOpen });
    }
  } catch (error) {
    console.error('‚ùå Fehler:', error.message);
    process.exit(1);
  }
}

if (require.main === module) {
  main().catch(console.error);
}
